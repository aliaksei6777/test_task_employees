{"version":3,"sources":["components/Header/Header.tsx","pages/Main/Main.tsx","api/api.tsx","app/reducer.ts","components/AddItemForm/AddItemForm.tsx","components/Preloader/loading.svg","components/Preloader/Preloader.tsx","pages/Employees/Employees.tsx","components/Routes/Routes.tsx","app/App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["Header","HeaderContainer","Nav","StyledLink","to","styled","div","NavLink","MainContainer","Main","instance","axios","create","baseURL","api","get","initialState","users","isFetching","toggleIsFetching","type","AddItemForm","addUser","useState","name","setName","error","setError","addTitle","trimTitle","trim","value","placeholder","onChange","e","currentTarget","onKeyPress","key","onClick","style","height","margin","color","Preloader","src","preloader","Employees","useEffect","dispatch","a","res","status","data","console","log","employees","useSelector","state","useDispatch","EmployeesContainer","newUser","id","Math","floor","random","first_name","user","StyledUl","map","StyledLi","removeEmployee","ul","li","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","u","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b3aa42f3.chunk.js","sourcesContent":["import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport styled from \"styled-components\";\n\nexport const Header = () => {\n\n    return (\n        <HeaderContainer>\n            <Nav>\n                <StyledLink to={'/Main'}>Main</StyledLink>\n                <StyledLink to={'/Employees'}>Employees</StyledLink>\n            </Nav>\n        </HeaderContainer>\n    )\n}\n\n\nconst HeaderContainer = styled.div`\n  height: 80px;\n  background-color: #9ac4ce;\n  display: flex;\n  align-items: center;\n`\nconst Nav = styled.div`\n  margin-left: 20px;\n  width: 150px;\n  display: flex;\n  justify-content: space-between;\n`\nconst StyledLink = styled(NavLink)`\n  color: black;\n  &.active {color: indianred;}\n  &:hover {color: white};\n`","import React from \"react\";\nimport styled from \"styled-components\"\n\nconst MainContainer = styled.div`\n      display: flex;\n      justify-content: center;\n    `\n\nexport const Main = () => {\n    return (\n        <MainContainer>\n            <h3>main page</h3>\n        </MainContainer>\n    )\n}","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://reqres.in/api/'\n})\n\nexport const api = {\n    getEmployees(){\n        return instance.get<ResponseType<Array<UserType>>>(`users?per_page=12`)\n    }\n}\n\nexport type ResponseType<D = Array<Record<string, unknown>>> = {\n    data: D;\n    page: number;\n    per_page: number;\n    total: number;\n    total_pages: number;\n};\n\nexport type UserType = {\n    id: number\n    email?: string\n    first_name: string\n    last_name?: string\n    avatar?: string\n}\n\n","import {api, UserType} from \"../api/api\";\nimport {AppThunk} from \"./store\";\n\nconst initialState = {\n    users: [] as UserType[],\n    isFetching: false\n}\n\nexport const reducer = (state: InitialStateType = initialState, action: ActionsType) => {\n    switch (action.type) {\n        case \"SET-EMPLOYEES\":\n            return {...state, users: action.users}\n        case \"ADD-EMPLOYEE\":\n            return {...state, users: [...state.users, action.user]}\n        case \"REMOVE-EMPLOYEE\":\n            return {...state, users: state.users.filter(u => u.id !== action.id)}\n        case \"TOGGLE-IS-FETCHING\":\n            return {...state, isFetching: action.isFetching}\n        default:\n            return state\n    }\n}\n\nexport const setEmployees = (users: Array<UserType>) => ({type: \"SET-EMPLOYEES\", users} as const)\nexport const addEmployee = (user: UserType) => ({type: \"ADD-EMPLOYEE\", user} as const)\nexport const removeEmployee = (id: number) => ({type: \"REMOVE-EMPLOYEE\", id} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: 'TOGGLE-IS-FETCHING', isFetching} as const)\n\n\nexport const fetchEmployeesTC = (): AppThunk => async dispatch => {\n    try {\n        dispatch(toggleIsFetching(true))\n        const res = await api.getEmployees()\n        dispatch(toggleIsFetching(false))\n        if (res.status === 200) {\n            dispatch(setEmployees(res.data.data))\n\n        } else {\n            console.log('ошибка получения данных от сервера')\n        }\n    } catch (error) {\n        console.log('Error: ', {...error})\n    }\n}\n\n\nexport type InitialStateType = typeof initialState\nexport type ActionsType =\n    | ReturnType<typeof setEmployees>\n    | ReturnType<typeof addEmployee>\n    | ReturnType<typeof removeEmployee>\n    | ReturnType<typeof toggleIsFetching>\n","import React, {ChangeEvent, useState} from \"react\";\n\n\nexport const AddItemForm: React.FC<AddItemFormPropsType> = ({addUser}) => {\n    const [name, setName] = useState(\"\")\n    const [error, setError] = useState<null | string>(null)\n\n    const addTitle = () => {\n        let trimTitle = name.trim()\n        if (trimTitle) {\n            addUser(trimTitle)\n            setName(\"\")\n        } else {setError(\"Name is required!\")}\n    }\n    const onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if (error !== null) setError(null);\n        setName(e.currentTarget.value)\n    }\n    return (\n        <div>\n            <input value={name}\n                   placeholder={\"Enter name\"}\n                   onChange={onChangeInputHandler}\n                   onKeyPress={e => {if(e.key === \"Enter\") {addTitle()}}}\n            />\n            <button onClick={addTitle}>add</button>\n            <div style={{height: 20, margin: 5, color: \"red\"}}>{error}</div>\n        </div>\n    )\n}\n\ntype AddItemFormPropsType = {\n    addUser: (name: string) => void\n}","export default __webpack_public_path__ + \"static/media/loading.1f2091a5.svg\";","import React from \"react\";\nimport preloader from \"./loading.svg\";\n\n\nexport const Preloader = () => {\n    return <div>\n        <img src={preloader} style={{height: 100}}/>\n    </div>\n}\n","import React, {useEffect} from 'react'\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {UserType} from \"../../api/api\";\nimport {RootStateType} from \"../../app/store\";\nimport {addEmployee, fetchEmployeesTC, removeEmployee} from \"../../app/reducer\";\nimport {AddItemForm} from \"../../components/AddItemForm/AddItemForm\";\nimport {Preloader} from \"../../components/Preloader/Preloader\";\n\nexport const Employees = () => {\n\n    useEffect(() => {\n        dispatch(fetchEmployeesTC());\n    }, []);\n\n    const employees = useSelector<RootStateType, UserType[]>((state) => state.employees.users);\n    const isFetching = useSelector<RootStateType, boolean>(state => state.employees.isFetching)\n    const dispatch = useDispatch();\n\n    const clickHandler = (id: number) => {\n        dispatch(removeEmployee(id));\n    };\n\n    const addEmployeeHandler = (name: string) => {\n        const newUser = {\n            id: Math.floor(Math.random() * 1e7),\n            first_name: name\n        }\n        dispatch(addEmployee(newUser))\n    }\n\n\n    return (\n        <EmployeesContainer>\n            <AddItemForm addUser={addEmployeeHandler}/>\n            <div>\n                {isFetching ? <Preloader/> : <h2>Employees</h2>}\n            </div>\n            <StyledUl>\n                {employees.map(e => (\n                    <StyledLi key={e.id}>\n                        <span>{e.first_name}</span>\n                        <button onClick={() => clickHandler(e.id)}>delete</button>\n                    </StyledLi>\n                ))}\n            </StyledUl>\n        </EmployeesContainer>\n    )\n}\n\nconst EmployeesContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n`\nconst StyledUl = styled.ul`\n  min-width: 200px;\n  padding-left: 0;\n  list-style-type: none;\n  -moz-box-shadow:    3px 3px 5px 6px #ccc;\n  -webkit-box-shadow: 3px 3px 5px 6px #ccc;\n  box-shadow:         3px 3px 5px 6px #ccc;\n`\nconst StyledLi = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 5px 10px 5px 10px;\n  transition: background-color 100ms;\n  &:hover {background-color: #9ac4ce};\n  button {\n    margin-left: auto;\n    padding: 2px;\n    color: indianred;\n    cursor: pointer;\n    transition: all 1000ms cubic-bezier(0.19, 1, 0.22, 1);\n    outline: 1px solid;\n    outline-offset: 0px;\n    text-shadow: none;\n    border: 0 solid;\n  }\n  button:hover {\n    box-shadow: inset 0 0 20px rgba(255, 255, 255, .5), 0 0 20px rgba(255, 255, 255, .2);\n    outline-color: rgba(255, 255, 255, 0);\n    outline-offset: 7px;\n  }\n`\n","import React from \"react\";\nimport {Switch, Redirect, Route} from \"react-router-dom\";\nimport {Main} from \"../../pages/Main/Main\";\nimport {Employees} from \"../../pages/Employees/Employees\";\n\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path={\"/\"} exact render={() => <Redirect to={'/Main'}/>}/>\n                <Route path={'/Main'} render={() => <Main/>}/>\n                <Route path={'/Employees'} render={() => <Employees/>}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"../components/Header/Header\";\nimport Routes from \"../components/Routes/Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div>\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\nimport {ActionsType, reducer} from \"./reducer\"\nimport thunk, {ThunkAction} from \"redux-thunk\";\n\n\nconst rootReducer = combineReducers({\n    employees: reducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type RootStateType = ReturnType<typeof rootReducer>\nexport type AppThunk<ReturnType = void> = ThunkAction<void,RootStateType,unknown,ActionsType>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./app/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}